<!DOCTYPE html>
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<title>彩虹化</title>
<script src="rgba.js"></script>
</head>
<body>
<div>
<h2>彩虹化</h2>
<div style="font-size: small; color: #666;">請先點左方按鈕載入圖片，再點右方「彩虹！」按鈕等候圖片彩虹化，所有處理皆於用戶端進行，轉換時間視電腦硬體及圖片大小增減。</div>
</div>
<div>
<input type="file" accept="image/jpg, image/jpeg, image/png" id="file"/>
<input type="button" value="彩虹！" id="btn_rainbow" disabled />
<input type="button" value="原始圖片" id="btn_reset" disabled />
<a id="btn_dl" href="#" style="text-decoration:none;"><input type="button" value="存檔" disabled /></a>
<div id="msg"></div>
</div>
<canvas id="can"></canvas>
<script>
var canvas, cc, data, put;
function setup(){
if(typeof(Worker) !== "undefined"){var worker = new Worker("worker.js");}
var bfil = document.getElementById("btn_rainbow"), bdl = document.getElementById("btn_dl"), bre = document.getElementById("btn_reset"), file = document.getElementById("file"), img, raw, res, rai;
canvas = document.getElementById("can");
cc = canvas.getContext("2d");
cc.fillStyle = "#000";
cc.fillRect(0, 0, canvas.width, canvas.height);
function getData(){
    var raw = cc.getImageData(0, 0, canvas.width, canvas.height), arr = [];
    for(var i = 0; i < canvas.height; i++){
        arr[i] = [];
        for(var j = 0; j < canvas.width; j++){
            //console.log(i,j);
            var pos = (i * canvas.width + j) * 4;
            arr[i][j] = [raw.data[pos], raw.data[pos+1], raw.data[pos+2], raw.data[pos+3]];
        }
    }
    return arr;
}
function getPostMsg(e){
    cc.fillStyle = e.data.color;
    cc.fillRect(e.data.x, e.data.y, 1, 1);
    if(e.data.x == canvas.width - 1 && e.data.y == canvas.height - 1){
        console.log(e.data.x, e.data.y);
        rai = cc.getImageData(0, 0, canvas.width, canvas.height);
        bfil.value = "彩虹！"
        allow_reset();
        allow_dl();
        no_rainbow();
    }
}
worker.addEventListener("message", getPostMsg, false);
function hToLeft(){
    bfil.value = "處理中"
    no_rainbow();
    worker.postMessage({data: cc.getImageData(0, 0, canvas.width, canvas.height), h: canvas.height, w: canvas.width});
}
function putData(){
    var tmp = cc.createImageData(data[0].length, data.length);
    for(var i = 0; i < data.length; i++){
        for(var j = 0; j < data[0].length; j++){
            var pos = (i * data.length + j) * 4;
            tmp.data[pos] = data[i][j][0];
            tmp.data[pos+1] = data[i][j][1]
            tmp.data[pos+2] = data[i][j][2];
            tmp.data[pos+3] = data[i][j][3];
        }
    }
    cc.putImageData(tmp, 0, 0);
}
function img_load(){
    canvas.width = img.naturalWidth;
    canvas.height = img.naturalHeight;
    cc.drawImage(img, 0, 0, img.naturalWidth, img.naturalHeight);
    no_reset();
    no_dl();
    allow_rainbow();
    URL.revokeObjectURL(img.src);
    res = cc.getImageData(0, 0, canvas.width, canvas.height);
    rai = null;
}
function img_reset(){
    cc.putImageData(res, 0, 0);
    no_reset();
    no_dl();
    allow_rainbow();
}
function upload(){
    img = new Image;
    img.addEventListener("load", img_load, false);
    img.src = URL.createObjectURL(file.files[0]);
}
function filter(){
    if(rai){
        cc.putImageData(rai, 0, 0);
        allow_reset();
        allow_dl();
        no_rainbow();
    }else{
        hToLeft();
    }
}
function dlimg(){
    bdl.href = canvas.toDataURL();
    bdl.download = "rainbow_" + file.files[0].name;
}
function allow_reset(){
    bre.disabled = false;
    bre.addEventListener("click", img_reset, false);
}
function no_reset(){
    bre.removeEventListener("click", img_reset, false);
    bre.disabled = true;
}
function allow_rainbow(){
    bfil.disabled = false;
    bfil.addEventListener("click", filter, false);
}
function no_rainbow(){
    bfil.removeEventListener("click", filter, false);
    bfil.disabled = true;
}
function allow_dl(){
    bdl.childNodes[0].disabled = false;
    bdl.addEventListener("click", dlimg, false);
}
function no_dl(){
    bdl.removeEventListener("click", dlimg, false);
    bdl.childNodes[0].disabled = true;
}
file.addEventListener("change", upload, false);
}
window.addEventListener("load", setup, false);
</script>
</body>
</html>